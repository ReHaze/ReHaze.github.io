{"version":3,"sources":["header/header.js","requests-api/requests-api.js","loader/loader.js","random-planet/random-planet.js","item-list/item-list.js","DetailInfo/DetailPeople.js","DetailInfo/DetailStarShips.js","DetailInfo/DetailSpecies.js","main/main.js","index.js"],"names":["Header","state","test","react_default","a","createElement","className","NavLink","to","activeClassName","React","Component","Requests","getPlanets","_callee","id","_args","arguments","regenerator_default","wrap","_context","prev","next","length","undefined","_this","getData","concat","sent","abrupt","stop","getPeople","_callee2","_args2","_context2","getSpecies","_callee3","_args3","_context3","getStarships","_callee4","_args4","_context4","url","fetch","result","json","Loader","Planets","RandomPlanet","name","diameter","rotation_period","population","loader","updatePlanet","Math","floor","random","then","value","setState","this","intervalId","setInterval","clearInterval","dowloading","loader_Loader","body","random_planet_PlanetView","info","PlanetView","data","props","src","alt","ItemList","AllData","renderPeople","map","e","instance","key","onClick","_ref","getId","_this2","send","results","match","join","information","DetailPeople","detailData","personId","getDetailes","prevProps","description","Object","objectSpread","DetailPeople_InfoBody","InfoBody","height","mass","gender","DetailStarShips","StarShipId","DetailStarShips_InfoBody","model","manufacturer","max_atmosphering_speed","DetailSpecies","SpeciesId","DetailSpecies_InfoBody","classification","average_height","average_lifespan","Main","PeopleId","StarShipsId","sendRequest","getIdPerson","getIdStarShip","getIdSpecies","BrowserRouter","basename","header_Header","Route","path","component","exact","render","item_list_ItemList","show","event","DetailPeople_DetailPeople","params","_ref2","DetailStarShips_DetailStarShips","_ref3","DetailSpecies_DetailSpecies","App","main_Main","rootElement","document","getElementById","ReactDOM","src_App"],"mappings":"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","file":"static/js/main.10ae4bef.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./header.css\";\n\nexport default class Header extends React.Component {\n  state = {\n    test: true\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper-menu\">\n        <h1 className=\"app-title\">\n          <NavLink to=\"/\">Star Wars</NavLink>\n        </h1>\n        <ul className=\"menu\">\n          <li>\n            <NavLink to=\"/people\" activeClassName=\"active\">\n              people\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/species\">species</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/starships\">starships</NavLink>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n","export default class Requests {\n  async getData(url) {\n    let result = await fetch(url);\n    result = result.json();\n    return await result;\n  }\n\n  getPlanets = async (id = \"\") => {\n    let a = await this.getData(`https://swapi.co/api/planets/${id}`);\n    return a;\n  };\n\n  getPeople = async (id = \"\") => {\n    let a = await this.getData(`https://swapi.co/api/people/${id}`);\n    return a;\n  };\n\n  getSpecies = async (id = \"\") => {\n    let a = await this.getData(`https://swapi.co/api/species/${id}`);\n    return a;\n  };\n  getStarships = async (id = \"\") => {\n    let a = await this.getData(`https://swapi.co/api/starships/${id}`);\n    return a;\n  };\n}\n","import React from \"react\";\nimport \"./loader.css\";\n\nexport default class Loader extends React.Component {\n  render() {\n    return (\n      <div className=\"loader\">\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Requests from \"../requests-api/requests-api\";\nimport Loader from \"../loader/loader\";\nimport \"./random-planet.css\";\n\nconst Planets = new Requests();\n\nexport default class RandomPlanet extends React.Component {\n  state = {\n    name: null,\n    id: null,\n    diameter: null,\n    rotation_period: null,\n    population: null,\n    loader: true\n  };\n\n  componentDidMount() {\n    this.updatePlanet();\n    this.intervalId = setInterval(this.updatePlanet, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  updatePlanet = () => {\n    let id = Math.floor(Math.random() * 15 + 3);\n    Planets.getPlanets(id).then(value => {\n      this.setState({\n        id: id,\n        name: value.name,\n        diameter: value.diameter,\n        rotation_period: value.rotation_period,\n        population: value.population,\n        loader: false\n      });\n    });\n  };\n\n  render() {\n    let dowloading = this.state.loader ? <Loader /> : null;\n    let body = !this.state.loader ? (\n      <PlanetView updatePlanet={this.updatePlanet} info={this.state} />\n    ) : null;\n    return (\n      <div className=\"planet\">\n        {dowloading}\n        {body}\n      </div>\n    );\n  }\n}\n\nclass PlanetView extends React.Component {\n  render() {\n    let data = this.props.info;\n    return (\n      <div className=\"planet-info\">\n        <div>\n          <img\n            src={`https://starwars-visualguide.com/assets/img/planets/${\n              data.id\n            }.jpg`}\n            alt={data.name}\n          />\n        </div>\n        <div>\n          <h2>\n            <span>Name: </span>\n            {data.name}\n          </h2>\n          <p>\n            <span>Population: </span>\n            {data.population}\n          </p>\n          <p>\n            <span>Diameter: </span>\n            {data.diameter}\n          </p>\n          <p>\n            <span>Period: </span>\n            {data.rotation_period}\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Loader from \"../loader/loader\";\nimport \"./item-list.css\";\n\nexport default class ItemList extends React.Component {\n  state = {\n    AllData: null,\n    loader: true\n  };\n\n  componentDidMount() {\n    this.props.send().then(value => {\n      this.setState(() => {\n        let data = value.results;\n        data.map(e => {\n          return (e.url = e.url.match(/[\\d]/gm).join(\"\"));\n        });\n        return {\n          AllData: data,\n          loader: false\n        };\n      });\n    });\n  }\n\n  renderPeople = value => {\n    return value.map(e => {\n      let data = this.props.instance(e);\n      return (\n        <li key={e.name} onClick={({ url }) => this.props.getId(e.url)}>\n          {data}\n        </li>\n      );\n    });\n  };\n\n  render() {\n    let information = this.state.loader ? (\n      <Loader />\n    ) : (\n      this.renderPeople(this.state.AllData)\n    );\n\n    return (\n      <div>\n        <ul className=\"item-list\">{information}</ul>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Loader from \"../loader/loader\";\nimport \"./Details.css\";\n\nexport default class DetailPeople extends React.Component {\n  state = {\n    detailData: null,\n    loader: null\n  };\n\n  componentDidMount() {\n    if (this.props.personId === null) {\n      return;\n    }\n    this.setState({\n      loader: true\n    });\n    this.getDetailes();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.personId !== this.props.personId) {\n      this.setState({\n        loader: true\n      });\n      this.getDetailes();\n    }\n  }\n\n  getDetailes() {\n    this.props.description(this.props.personId).then(e => {\n      this.setState({\n        detailData: e,\n        loader: false\n      });\n    });\n  }\n\n  render() {\n    let info = { ...this.state.detailData };\n\n    if (this.state.loader) {\n      return <Loader />;\n    } else {\n      return <InfoBody info={info} id={this.props.personId} />;\n    }\n  }\n}\n\nclass InfoBody extends React.Component {\n  render() {\n    if (this.props.id === null) {\n      return (\n        <div className=\"information\">\n          <h3 className=\"choice\">Choose character in left side</h3>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"information\">\n          <p>\n            <span>name: </span>\n            {this.props.info.name}\n          </p>\n          <p>\n            <span>height: </span>\n            {this.props.info.height}{\" \"}\n          </p>\n          <p>\n            <span>mass: </span> {this.props.info.mass}\n          </p>\n          <p>\n            <span>gender: </span>\n            {this.props.info.gender}\n          </p>\n          <img\n            src={`https://starwars-visualguide.com/assets/img/characters/${\n              this.props.id\n            }.jpg`}\n            alt={this.props.info.name}\n          />\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport Loader from \"../loader/loader\";\nimport \"./Details.css\";\n\nexport default class DetailStarShips extends React.Component {\n  state = {\n    detailData: null,\n    loader: false\n  };\n\n  componentDidMount() {\n    if (this.props.StarShipId === null) {\n      return;\n    }\n    this.setState({\n      loader: true\n    });\n    this.getDetailes();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.StarShipId !== this.props.StarShipId) {\n      this.setState({\n        loader: true\n      });\n      this.getDetailes();\n    }\n  }\n\n  getDetailes() {\n    this.props.description(this.props.StarShipId).then(e => {\n      this.setState({\n        detailData: e,\n        loader: false\n      });\n    });\n  }\n\n  render() {\n    let info = { ...this.state.detailData };\n\n    if (this.state.loader) {\n      return <Loader />;\n    } else {\n      return <InfoBody info={info} id={this.props.StarShipId} />;\n    }\n  }\n}\n\nclass InfoBody extends React.Component {\n  render() {\n    if (this.props.id === null) {\n      return (\n        <div className=\"information\">\n          <h3 className=\"choice\">Choose starship in left side</h3>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"information\">\n          <p>\n            <span>name: </span>\n            {this.props.info.name}\n          </p>\n          <p>\n            <span>model: </span>\n            {this.props.info.model}\n          </p>\n          <p>\n            <span>manufacturer: </span>\n            {this.props.info.manufacturer}\n          </p>\n          <p>\n            <span>max_atmosphering_speed: </span>\n            {this.props.info.max_atmosphering_speed}\n          </p>\n          <img\n            src={`https://starwars-visualguide.com/assets/img/starships/${\n              this.props.id\n            }.jpg`}\n            alt={this.props.info.name}\n          />\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport Loader from \"../loader/loader\";\nimport \"./Details.css\";\n\nexport default class DetailSpecies extends React.Component {\n  state = {\n    detailData: null,\n    loader: false\n  };\n\n  componentDidMount() {\n    if (this.props.SpeciesId === null) {\n      return;\n    }\n    this.setState({\n      loader: true\n    });\n    this.getDetailes();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.SpeciesId !== this.props.SpeciesId) {\n      this.setState({\n        loader: true\n      });\n      this.getDetailes();\n    }\n  }\n\n  getDetailes() {\n    this.props.description(this.props.SpeciesId).then(e => {\n      this.setState({\n        detailData: e,\n        loader: false\n      });\n    });\n  }\n\n  render() {\n    let info = { ...this.state.detailData };\n\n    if (this.state.loader) {\n      return <Loader />;\n    } else {\n      return <InfoBody info={info} id={this.props.SpeciesId} />;\n    }\n  }\n}\n\nclass InfoBody extends React.Component {\n  render() {\n    if (this.props.id === null) {\n      return (\n        <div className=\"information\">\n          <h3 className=\"choice\">Choose species in left side</h3>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"information\">\n          <p>\n            <span>Species: </span>\n            {this.props.info.name}\n          </p>\n          <p>\n            <span>classification: </span>\n            {this.props.info.classification}\n          </p>\n          <p>\n            <span>average_height: </span>\n            {this.props.info.average_height}\n          </p>\n          <p>\n            <span>average_lifespan: </span>\n            {this.props.info.average_lifespan}\n          </p>\n          <img\n            src={`https://starwars-visualguide.com/assets/img/species/${\n              this.props.id\n            }.jpg`}\n            alt={this.props.info.name}\n          />\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport Header from \"../header/header\";\nimport RandomPlanet from \"../random-planet/random-planet\";\nimport ItemList from \"../item-list/item-list\";\nimport DetailPeople from \"../DetailInfo/DetailPeople\";\nimport DetailStarShips from \"../DetailInfo/DetailStarShips\";\nimport DetailSpecies from \"../DetailInfo/DetailSpecies\";\nimport Requests from \"../requests-api/requests-api\";\nimport \"./style.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nexport default class Main extends React.Component {\n  state = {\n    PeopleId: null,\n    StarShipsId: null,\n    SpeciesId: null\n  };\n\n  sendRequest = new Requests();\n\n  render() {\n    let getIdPerson = e => {\n      this.setState({\n        PeopleId: e\n      });\n    };\n\n    let getIdStarShip = e => {\n      this.setState({\n        StarShipsId: e\n      });\n    };\n\n    let getIdSpecies = e => {\n      this.setState({\n        SpeciesId: e\n      });\n    };\n\n    return (\n      <Router basename=\"/star-wars-db\">\n        <div>\n          <Header />\n          <Route path=\"/\" component={RandomPlanet} />\n\n          <Route\n            path=\"/people\"\n            exact\n            render={({ match }) => (\n              <div>\n                <h2 className=\"page-title\">People</h2>\n                <div className=\"wrapper-description\">\n                  <ItemList\n                    show={match !== null}\n                    send={this.sendRequest.getPeople}\n                    instance={event => event.name}\n                    getId={getIdPerson}\n                  />\n                  <DetailPeople\n                    description={this.sendRequest.getPeople}\n                    personId={this.state.PeopleId}\n                  />\n                </div>\n              </div>\n            )}\n          />\n          <Route\n            path=\"/people/:id\"\n            render={match => {\n              let id = match.match.params.id;\n              return (\n                <DetailPeople\n                  description={this.sendRequest.getPeople}\n                  personId={id}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/starships\"\n            exact\n            render={({ match }) => (\n              <div>\n                <h2 className=\"page-title\">Starships</h2>\n                <div className=\"wrapper-description\">\n                  <ItemList\n                    show={match !== null}\n                    send={this.sendRequest.getStarships}\n                    instance={event => event.name}\n                    getId={getIdStarShip}\n                  />\n                  <DetailStarShips\n                    description={this.sendRequest.getStarships}\n                    StarShipId={this.state.StarShipsId}\n                  />\n                </div>\n              </div>\n            )}\n          />\n          <Route\n            path=\"/starships/:id\"\n            render={match => {\n              let id = match.match.params.id;\n              return (\n                <DetailStarShips\n                  description={this.sendRequest.getStarships}\n                  StarShipId={id}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/species\"\n            render={({ match }) => (\n              <div>\n                <h2 className=\"page-title\">Species</h2>\n                <div className=\"wrapper-description\">\n                  <ItemList\n                    show={match !== null}\n                    send={this.sendRequest.getSpecies}\n                    instance={event => event.name}\n                    getId={getIdSpecies}\n                  />\n                  <DetailSpecies\n                    description={this.sendRequest.getSpecies}\n                    SpeciesId={this.state.SpeciesId}\n                  />\n                </div>\n              </div>\n            )}\n          />\n          <Route\n            path=\"/species/:id\"\n            render={match => {\n              let id = match.match.params.id;\n              return (\n                <DetailSpecies\n                  description={this.sendRequest.getSpecies}\n                  SpeciesId={id}\n                />\n              );\n            }}\n          />\n        </div>\n      </Router>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './main/main.js';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Main />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}