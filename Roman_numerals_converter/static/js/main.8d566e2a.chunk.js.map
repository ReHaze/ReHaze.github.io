{"version":3,"sources":["table/table.js","converter/converter.js","index.js"],"names":["CustomTableCell","withStyles","theme","head","backgroundColor","palette","primary","dark","color","common","white","textAlign","fontSize","body","textTransform","fontWeight","TableCell","root","width","marginTop","spacing","unit","overflowX","table","minWidth","row","&:nth-of-type(odd)","background","default","props","classes","react_default","a","createElement","Paper_default","className","Table_default","TableHead_default","TableRow_default","TableBody_default","obj_small","Name","ID","obj_mid","obj_large","obj_extra","Converter","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputHandler","e","setState","inputValue","target","value","generate","keyCode","createDigit","state","convertedValue","num","Number","fst","snd","thrd","frth","b","c","d","result","check","toString","length","x","split","i","undefined","concat","document","addEventListener","_this2","Input_default","type","onChange","min","max","id","Button_default","variant","onClick","React","Component","App","converter_Converter","rootElement","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.8d566e2a.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.common.white,\n    textAlign: \"center\",\n    fontSize: \"16px\"\n  },\n  body: {\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    fontWeight: \"500\"\n  }\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n\n  table: {\n    minWidth: 200\n  },\n\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n});\n\nfunction CustomizedTable(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <CustomTableCell>Единицы</CustomTableCell>\n            <CustomTableCell>Десятки</CustomTableCell>\n            <CustomTableCell>Сотни</CustomTableCell>\n            <CustomTableCell>Тысячи</CustomTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <CustomTableCell>1 i</CustomTableCell>\n            <CustomTableCell>10 x</CustomTableCell>\n            <CustomTableCell>100 c</CustomTableCell>\n            <CustomTableCell>1000 m</CustomTableCell>\n          </TableRow>\n          <TableRow>\n            <CustomTableCell>1 ii</CustomTableCell>\n            <CustomTableCell>20 xx</CustomTableCell>\n            <CustomTableCell>200 cc</CustomTableCell>\n            <CustomTableCell>2000 mm</CustomTableCell>\n          </TableRow>\n          <TableRow>\n            <CustomTableCell>1 iii</CustomTableCell>\n            <CustomTableCell>30 xxx</CustomTableCell>\n            <CustomTableCell>300 ccc</CustomTableCell>\n            <CustomTableCell>3000 mmm</CustomTableCell>\n          </TableRow>\n          <TableRow>\n            <CustomTableCell>1 iv</CustomTableCell>\n            <CustomTableCell>40 xl</CustomTableCell>\n            <CustomTableCell>400 cd</CustomTableCell>\n            <CustomTableCell />\n          </TableRow>\n          <TableRow>\n            <CustomTableCell>1 v</CustomTableCell>\n            <CustomTableCell>50 l</CustomTableCell>\n            <CustomTableCell>500 d</CustomTableCell>\n            <CustomTableCell />\n          </TableRow>\n          <TableRow>\n            <CustomTableCell>1 vi</CustomTableCell>\n            <CustomTableCell>60 lx</CustomTableCell>\n            <CustomTableCell>600 dc</CustomTableCell>\n            <CustomTableCell />\n          </TableRow>\n          <TableRow>\n            <CustomTableCell>1 vii</CustomTableCell>\n            <CustomTableCell>70 lxx</CustomTableCell>\n            <CustomTableCell>700 dcc</CustomTableCell>\n            <CustomTableCell />\n          </TableRow>\n          <TableRow>\n            <CustomTableCell>1 viii</CustomTableCell>\n            <CustomTableCell>80 lxxx</CustomTableCell>\n            <CustomTableCell>800 dccc</CustomTableCell>\n            <CustomTableCell />\n          </TableRow>\n          <TableRow>\n            <CustomTableCell>1 ix</CustomTableCell>\n            <CustomTableCell>90 xc</CustomTableCell>\n            <CustomTableCell>900 dccc</CustomTableCell>\n            <CustomTableCell />\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nCustomizedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(CustomizedTable);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"../table/table\";\nimport \"./converter.css\";\n\nlet obj_small = [\n  { Name: \"I\", ID: 1 },\n  { Name: \"II\", ID: 2 },\n  { Name: \"III\", ID: 3 },\n  { Name: \"IV\", ID: 4 },\n  { Name: \"V\", ID: 5 },\n  { Name: \"VI\", ID: 6 },\n  { Name: \"VII\", ID: 7 },\n  { Name: \"VIII\", ID: 8 },\n  { Name: \"IX\", ID: 9 }\n];\n\nlet obj_mid = [\n  { Name: \"X\", ID: 10 },\n  { Name: \"XX\", ID: 20 },\n  { Name: \"XXX\", ID: 30 },\n  { Name: \"XL\", ID: 40 },\n  { Name: \"L\", ID: 50 },\n  { Name: \"LX\", ID: 60 },\n  { Name: \"LXX\", ID: 70 },\n  { Name: \"LXXX\", ID: 80 },\n  { Name: \"XC\", ID: 90 }\n];\n\nlet obj_large = [\n  { Name: \"C\", ID: 100 },\n  { Name: \"CC\", ID: 200 },\n  { Name: \"CCC\", ID: 300 },\n  { Name: \"CD\", ID: 400 },\n  { Name: \"D\", ID: 500 },\n  { Name: \"DC\", ID: 600 },\n  { Name: \"DCC\", ID: 700 },\n  { Name: \"DCCC\", ID: 800 },\n  { Name: \"CM\", ID: 900 }\n];\nlet obj_extra = [\n  { Name: \"M\", ID: 1000 },\n  { Name: \"MM\", ID: 2000 },\n  { Name: \"MMM\", ID: 3000 }\n];\n\nexport default class Converter extends React.Component {\n  createDigit(num) {\n    if (\n      num === \"\" ||\n      num === null ||\n      Number(num) > 3999 ||\n      Number(num) < 0 ||\n      Number(num) === 0\n    ) {\n      this.setState({\n        convertedValue: `Введите число от 1 до 3999`\n      });\n      return;\n    }\n    let check = num.toString().length;\n    let x = num.toString().split(\"\");\n    let fst, snd, thrd, frth;\n    let a, b, c, d, result;\n\n    switch (check) {\n      case 4:\n        fst = Number(x[0]) * 1000;\n        snd = Number(x[1]) * 100;\n        thrd = Number(x[2]) * 10;\n        frth = Number(x[3]) * 1;\n\n        for (let i = 0; i < obj_extra.length; i++) {\n          if (obj_extra[i].ID === fst) {\n            a = obj_extra[i].Name;\n            break;\n          }\n        }\n\n        for (let i = 0; i < obj_large.length; i++) {\n          if (obj_large[i].ID === snd) {\n            b = obj_large[i].Name;\n            break;\n          }\n        }\n\n        for (let i = 0; i < obj_mid.length; i++) {\n          if (obj_mid[i].ID === thrd) {\n            c = obj_mid[i].Name;\n            break;\n          }\n        }\n\n        for (let i = 0; i < obj_small.length; i++) {\n          if (obj_small[i].ID === frth) {\n            d = obj_small[i].Name;\n            break;\n          }\n        }\n\n        if (b === undefined) b = \"\";\n        if (c === undefined) c = \"\";\n        if (d === undefined) d = \"\";\n        result = a + b + c + d;\n        this.setState({\n          convertedValue: `${num} = ${result}`\n        });\n        break;\n\n      case 3:\n        fst = Number(x[0]) * 100;\n        snd = Number(x[1]) * 10;\n        thrd = Number(x[2]) * 1;\n\n        for (let i = 0; i < obj_large.length; i++) {\n          if (obj_large[i].ID === fst) {\n            a = obj_large[i].Name;\n            break;\n          }\n        }\n\n        for (let i = 0; i < obj_mid.length; i++) {\n          if (obj_mid[i].ID === snd) {\n            b = obj_mid[i].Name;\n            break;\n          }\n        }\n\n        for (let i = 0; i < obj_small.length; i++) {\n          if (obj_small[i].ID === thrd) {\n            c = obj_small[i].Name;\n            break;\n          }\n        }\n\n        if (b === undefined) b = \"\";\n        if (c === undefined) c = \"\";\n        result = a + b + c;\n        this.setState({\n          convertedValue: `${num} =  ${result}`\n        });\n        break;\n\n      case 2:\n        fst = Number(x[0]) * 10;\n        snd = Number(x[1]) * 1;\n\n        for (let i = 0; i < obj_mid.length; i++) {\n          if (obj_mid[i].ID === fst) {\n            a = obj_mid[i].Name;\n            break;\n          }\n        }\n\n        for (let i = 0; i < obj_small.length; i++) {\n          if (obj_small[i].ID === snd) {\n            b = obj_small[i].Name;\n            break;\n          }\n        }\n\n        if (b === undefined) b = \"\";\n        result = a + b;\n        this.setState({\n          convertedValue: `${num} = ${result}`\n        });\n        break;\n\n      case 1:\n        fst = Number(x[0]) * 1;\n\n        for (let i = 0; i < obj_small.length; i++) {\n          if (obj_small[i].ID === fst) {\n            a = obj_small[i].Name;\n            break;\n          }\n        }\n\n        this.setState({\n          convertedValue: `${num} =  ${(result = a)} `\n        });\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: null,\n      convertedValue: null\n    };\n  }\n\n  inputHandler = e => {\n    this.setState({\n      inputValue: e.target.value\n    });\n  };\n\n  generate = e => {\n    if (e.keyCode === 13) {\n      this.createDigit(this.state.inputValue);\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.generate);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">Конвертер римских чисел</h1>\n        <div className=\"elements\">\n          <Input\n            className=\"input-item\"\n            type=\"number\"\n            onChange={this.inputHandler}\n            min=\"1\"\n            max=\"3999\"\n            id=\"rawData\"\n          />\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            className=\"submit\"\n            onClick={() => this.createDigit(this.state.inputValue)}\n          >\n            Преобразовать\n          </Button>\n        </div>\n        <Paper>\n          <p className=\"output\">{this.state.convertedValue}</p>\n        </Paper>\n        <Paper className=\"paper\">\n          Римские числа появились за 500 лет до нашей эры у эрусков. Они широко\n          использовались в Древнем Риме и позднее в средневековой Европе вплоть\n          до 14 века нашей эры. До сих пор мы можем их найти в обозначении веков\n          или значимых дат, а также на циферблатах часов. В традиционной римской\n          записи число состоит из латинских букв I, V, X, L, C, D и M. Каждая\n          буква может повторяться в числе не более трёх раз подряд. Это значит,\n          что максимальное число, которое можно записать, это MMMCMXCIX, то есть\n          3999.\n        </Paper>\n        <Table />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Converter from \"./converter/converter.js\";\n\nclass App extends React.Component {\n  render() {\n    return <Converter> </Converter>;\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}